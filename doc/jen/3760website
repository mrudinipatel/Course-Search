##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php;

	server_name _;

	location /api {
		# look for a file in /var/www/html (not /var/www/html/api)
		location /api {
			alias /var/www/html;
			try_files $uri $uri.php /api.php;
		}

		# if the uri matches /api/course_id
		location ~ ^/api/course_id/(.*) {
			# if it has /prereq_only, be sure to include that parameter
			rewrite ^/api/course_id/(.*)/prereq_only$ /api/course.php?course_id=$1&prereq_only=true last;
			# otherwise default to this
			rewrite ^/api/course_id/(.*)$ /api/course.php?course_id=$1 last;
		}
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.2-fpm.sock;
		fastcgi_param DB_NAME CourseSearch;
        	fastcgi_param DB_HOST localhost;
        	fastcgi_param DB_USER cis3760;
        	fastcgi_param DB_PASS pass1234;
        	include fastcgi_params;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.php;
    server_name cis3760f23-09.socs.uoguelph.ca; # managed by Certbot

	# these changes look to be reflected on our site
	location /api {
		location /api {
			# look for a file in /var/www/html (not /var/www/html/api)
			alias /var/www/html;
			try_files $uri $uri.php /api.php;
		}
		# if the URI matches /api/course_id
		location ~ ^/api/course_id/(.*) {
			# if it has /prereq_only, include it
			rewrite ^/api/course_id/(.*)/prereq_only$ /api/course.php?course_id=$1&prereq_only=true last;
			# otherwise default to this
			rewrite ^/api/course_id/(.*)$ /api/course.php?course_id=$1 last;
		}
		location ~ ^/api/course_name/(.*) {
			rewrite ^/api/course_name/(.*)/prereq_only$ /api/course.php?course_name=$1&prereq_only=true last;
			rewrite ^/api/course_name/(.*)$ /api/course.php?course_name=$1 last;
		}
		location ~ ^/api/subject/(.*) {
			rewrite ^/api/subject/(.*)$ /api/course.php?subject=$1 last;
		}
		location ~* ^/api/available/(.*) {
			rewrite ^/api/available/Fall$ /api/available.php?taken=$1&sem=Fall last;
			rewrite ^/api/available/(.*)/Fall$ /api/available.php?taken=$1&sem=Fall last;
			rewrite ^/api/available/Winter$ /api/available.php?taken=$1&sem=Winter last;
			rewrite ^/api/available/(.*)/Winter$ /api/available.php?taken=$1&sem=Winter last;
			rewrite ^/api/available/Summer$ /api/available.php?taken=$1&sem=Summer last;
			rewrite ^/api/available/(.*)/Summer$ /api/available.php?taken=$1&sem=Summer last;
			rewrite ^/api/available/(.*)$ /api/available.php?taken=$1 last;
		}
		location ~* ^/api/allCourses/(.*) {
			rewrite ^/api/allCourses/(.*)$ /api/allCourses.php last;
		}
		location ~ ^/api/create {
			limit_except POST {
				deny all;
			}
			rewrite ^/api/create$ /api/course.php last; #redirects to course.php with basic auth and body
		}
		location ~ ^/api/update {
			limit_except PUT {
				deny all;
			}
			rewrite ^/api/update$ /api/course.php last;
		}
		location ~ ^/api/delete {
			limit_except DELETE {
				deny all;
			}
			rewrite ^/api/delete$ /api/course.php last;
		}
	}

	location /about {        
		# look for a file in /var/www/html, not /var/www/html/about        
		alias /var/www/html;        
		try_files $uri $uri.php /about.php;        
		# done this way since alias /var/www/html didn't work        
		location /about/burakPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/burakPage.php;        
		}        
		location /about/cavaariPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/cavaariPage.php;        
		}        
		location /about/jenPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/jenPage.php;        
		}        
		location /about/mrudiniPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/MrudiniPage.php;        
		}        
		location /about/oliviaPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/oliviaPage.php;        
		}        
		location /about/rashiPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/rashiPage.php;        
		}        
		location /about/sarahPage {            
			alias /var/www/html;            
			try_files $uri $uri.php /pages/sarahPage.php;        
		}    
	}

	location /pages/jenPage {        
		alias /var/www/html;        
		try_files $uri $uri.php /pages/jenPage.php;    
	}    

	location /courseSearch {        
		alias /var/www/html;        
		try_files $uri $uri.php /courseSearch.php;    
	}
	location /planByPrereq {
        alias /var/www/html;
        try_files $uri $uri.php /planByPrereq.php;
    }
    location /resources {
        alias /var/www/html;
        try_files $uri $uri.php /resources.php;
    }
    location /gradeCalculator {
        alias /var/www/html;
        try_files $uri $uri.php /gradeCalculator.php;
    }
    location /plannedCourses {
        alias /var/www/html;
        try_files $uri $uri.php /plannedCourses.php;
    }
    location /excel {
        alias /var/www/html;
        try_files $uri $uri.php /excel.php;
    }

    location = /favicon.ico {
        access_log off; log_not_found off;
    }
    location = /robots.txt {
        access_log off; log_not_found off;
    }
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.2-fpm.sock;
                fastcgi_param DB_NAME CourseSearch;
                fastcgi_param DB_HOST localhost;
                fastcgi_param DB_USER cis3760;
                fastcgi_param DB_PASS pass1234;
                include fastcgi_params;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cis3760f23-09.socs.uoguelph.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cis3760f23-09.socs.uoguelph.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = cis3760f23-09.socs.uoguelph.ca) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name cis3760f23-09.socs.uoguelph.ca;
    return 404; # managed by Certbot


}
